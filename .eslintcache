[{"D:\\REACT\\ecommerce2\\src\\App.js":"1","D:\\REACT\\ecommerce2\\src\\screens\\ProductScreen.js":"2","D:\\REACT\\ecommerce2\\src\\constants\\productsConstants.js":"3","D:\\REACT\\ecommerce2\\src\\actions\\cartActions.js":"4","D:\\REACT\\ecommerce2\\src\\reducers\\cartReducers.js":"5","D:\\REACT\\ecommerce2\\src\\screens\\CartScreen.js":"6","D:\\REACT\\ecommerce2\\src\\store.js":"7","D:\\REACT\\ecommerce2\\src\\components\\Rating.js":"8","D:\\REACT\\ecommerce2\\src\\reducers\\productReducers.js":"9","D:\\REACT\\ecommerce2\\src\\screens\\HomeScreen.js":"10","D:\\REACT\\ecommerce2\\src\\reducers\\userReducers.js":"11","D:\\REACT\\ecommerce2\\src\\actions\\userActions.js":"12","D:\\REACT\\ecommerce2\\src\\screens\\LoginScreen.js":"13"},{"size":913,"mtime":1624641554665,"results":"14","hashOfConfig":"15"},{"size":3893,"mtime":1624497209966,"results":"16","hashOfConfig":"15"},{"size":367,"mtime":1623897520730,"results":"17","hashOfConfig":"15"},{"size":1008,"mtime":1624672205093,"results":"18","hashOfConfig":"15"},{"size":1025,"mtime":1624815358756,"results":"19","hashOfConfig":"15"},{"size":4118,"mtime":1624672434015,"results":"20","hashOfConfig":"15"},{"size":1151,"mtime":1625097217671,"results":"21","hashOfConfig":"15"},{"size":1662,"mtime":1611608882534,"results":"22","hashOfConfig":"15"},{"size":1204,"mtime":1623901958137,"results":"23","hashOfConfig":"15"},{"size":1118,"mtime":1624329001507,"results":"24","hashOfConfig":"15"},{"size":703,"mtime":1625095671622,"results":"25","hashOfConfig":"15"},{"size":1131,"mtime":1625105679916,"results":"26","hashOfConfig":"15"},{"size":2243,"mtime":1625103750124,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"xvdhna",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\REACT\\ecommerce2\\src\\App.js",["58"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Container } from \"react-bootstrap\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport { CartScreen } from \"./screens/CartScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header></Header>\n\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/\" component={HomeScreen} exact></Route>\n            <Route path=\"/product/:id\" component={ProductScreen}></Route>\n            <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n            {/** ? es opcional */}\n          </Container>\n        </main>\n        <Footer></Footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["59","60"],"D:\\REACT\\ecommerce2\\src\\screens\\ProductScreen.js",["61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Card, Button,Form } from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductsDetails } from \"../actions/productActions\";\r\n\r\nexport default function ProductScreen(props) {\r\n  // const [product, setproduct] = useState({})\r\n\r\n  //  async function fetchProduct (props) {\r\n  //   const res =  await fetch(`/api/products/${props.match.params.id}`)\r\n  //   const data = await res.json()\r\n  //   setproduct(data)\r\n  //  }\r\n\r\n  const [qty, setQty] = useState(1)\r\n\r\n  \r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product} = productDetails;\r\n  console.log(product.countInStock);\r\n  \r\n\r\n  useEffect(() => {\r\n    //fetchProduct(props)\r\n    dispatch(listProductsDetails(props.match.params.id));\r\n  }, [props]);\r\n\r\n  const addToCartHandler=()=>{\r\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        go back\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <h1>loading</h1>\r\n      ) : error ? (\r\n        <h1>{error}</h1>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid></Image>\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                ></Rating>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price : ${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description : ${product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>price:</Col>\r\n                    <Col>\r\n                      <strong>$ {product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"in Stock\" : \"no hay\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock>0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                      <Form.Control as='select' value={qty} onChange={(e)=>{setQty(e.target.value)}}>\r\n                       {[...Array(product.countInStock).keys()].map(x=>(\r\n                         console.log(x),\r\n                          <option key={x+1} >{x+1}</option>\r\n                        ))\r\n                      }\r\n\r\n                      </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                  onClick={addToCartHandler}\r\n                    className=\"btn btn-dark\"\r\n                    type=\"button\"\r\n                    disable={product.countInStock === 0}\r\n                  >\r\n                    add to cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\REACT\\ecommerce2\\src\\constants\\productsConstants.js",[],"D:\\REACT\\ecommerce2\\src\\actions\\cartActions.js",["63"],"D:\\REACT\\ecommerce2\\src\\reducers\\cartReducers.js",[],"D:\\REACT\\ecommerce2\\src\\screens\\CartScreen.js",["64"],"import React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Form, ListGroup, Row, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addToCart,removeFromCart } from '../actions/cartActions'\r\nimport { CART_ADD_ITEM } from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\n\r\nexport const CartScreen = (props) => {\r\n    const productId = props.match.params.id\r\n\r\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1\r\n\r\n    //esto mira en la barra de direcciones (?qty=1) y lo separa en un arreglo y cojo el numero despues del igual\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n    console.log(cartItems);\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n\r\n\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push('/login?redirect=shipping')\r\n        //si no esta logeado va a login sino va a shipping\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                {cartItems.length === 0 ? <Link to='/'>no hay objetos en el carro</Link> : (\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map(item => (\r\n                            \r\n                            <ListGroup.Item key={item.product}>\r\n\r\n                                <Row>\r\n                \r\n                                    <Col md={2}>\r\n\r\n                                        <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n\r\n                                    </Col>\r\n                                    <Col me={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        {item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => { \r\n                                            dispatch(\r\n                                                addToCart(item.product, Number(e.target.value))) }}>\r\n                                            {[...Array(item.countInStock).keys()].map(x => (                                        \r\n                                                <option key={x + 1} >{x + 1}</option>\r\n                                            ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type=\"button\" variant='light' onClick={() => removeFromCartHandler(item.product)}>borrar</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n\r\n                    </ListGroup>\r\n                )}\r\n\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup.Item>\r\n                        <h3>\r\n                        SUBTOTAL: \r\n                        {cartItems.reduce((acc,item)=>acc+item.qty,0)} {\r\n                            //0 es donde inicia\r\n                        }\r\n\r\n                        </h3>\r\n                        ${cartItems.reduce((acc,item)=>acc+item.qty*item.price,0).toFixed(2)}\r\n                       \r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button type='button' className='btn-block' disabled={cartItems.length===0} onClick={checkoutHandler}>boton</Button>\r\n                        </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n      \r\n        </Row>\r\n    )\r\n}\r\n","D:\\REACT\\ecommerce2\\src\\store.js",[],"D:\\REACT\\ecommerce2\\src\\components\\Rating.js",[],"D:\\REACT\\ecommerce2\\src\\reducers\\productReducers.js",[],"D:\\REACT\\ecommerce2\\src\\screens\\HomeScreen.js",["65","66"],"D:\\REACT\\ecommerce2\\src\\reducers\\userReducers.js",[],"D:\\REACT\\ecommerce2\\src\\actions\\userActions.js",[],"D:\\REACT\\ecommerce2\\src\\screens\\LoginScreen.js",["67"],{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":31,"column":6,"nodeType":"78","endLine":31,"endColumn":13,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":96,"column":40,"nodeType":"82","messageId":"83","endLine":96,"endColumn":41},{"ruleId":"68","severity":1,"message":"84","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"85","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":23},{"ruleId":"68","severity":1,"message":"86","line":1,"column":15,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"87","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":16},{"ruleId":"68","severity":1,"message":"88","line":19,"column":12,"nodeType":"70","messageId":"71","endLine":19,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'React' is defined but never used.","'CART_ADD_ITEM' is defined but never used.","'useState' is defined but never used.","'products' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [dispatch, props]",{"range":"94","text":"95"},[1003,1010],"[dispatch, props]"]